<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:managers="clr-namespace:ES.Manager.ViewModels.Managers"
                    xmlns:enumerations="clr-namespace:ES.Common.Enumerations;assembly=ES.Common"
                    xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity">

    <DataTemplate DataType="{x:Type managers:EsCategoriesViewModel}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Separator Grid.Row="1" Margin="10 5"/>
                <Grid Grid.Row="0" x:Name="Grid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Parent" HorizontalAlignment="Right"/>
                    <TextBox Grid.Column="1" Text="{Binding Category.Parent.ShortDescription, Mode=OneWay}" IsReadOnly="True" HorizontalAlignment="Stretch"/>
                    <ToggleButton x:Name="ToggleButton" Grid.Column="2" Content="Acept parent" IsChecked="{Binding IsSettingParent}"/>
                    <Button Grid.Column="3" Content="Remove parent" Command="{Binding RemoveParentCommand}" CommandParameter="{Binding Category}"/>
                    <Popup Grid.Column="0" x:Name="Popup" Grid.Row="0" IsOpen="{Binding IsSettingParent}" Placement="Bottom" PlacementTarget="{Binding ElementName=Grid}" Focusable="false" StaysOpen="False"
                   
                                    PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                        <Border Margin="10" BorderThickness="1" MinWidth="600" MinHeight="500">
                            <TreeView x:Name="ParentTreeView" ItemsSource="{Binding ParentCategories}">
                                <TreeView.ItemContainerStyle>
                                    <Style TargetType="{x:Type TreeViewItem}">
                                        <!--<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />-->

                                        <Setter Property="FontWeight" Value="Normal" />
                                        <Style.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter Property="FontWeight" Value="Bold" />
                                                <Setter Property="Background" Value="#FF8801"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </TreeView.ItemContainerStyle>
                                <TreeView.ItemTemplate>
                                    <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                        <Border ToolTip="{Binding Description}">
                                            <TextBlock Text="{Binding ShortDescription}" TextTrimming="CharacterEllipsis" />
                                        </Border>
                                    </HierarchicalDataTemplate>
                                </TreeView.ItemTemplate>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectedItemChanged">
                                        <i:InvokeCommandAction Command="{Binding ParentItemSelectionChangedCommand}" CommandParameter="{Binding ElementName=ParentTreeView, Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseDoubleClick">
                                        <i:InvokeCommandAction Command="{Binding ParentItemSelectionChangedCommand}" CommandParameter="{Binding ElementName=ParentTreeView, Path=SelectedItem}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TreeView>
                        </Border>
                    </Popup>

                </Grid>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Row="0" Grid.Column="0" Text="ԱՏԳՏ ԱԱ" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Category.HcDcs, UpdateSourceTrigger=PropertyChanged}" Width="70" HorizontalContentAlignment="Center"/>
                    <TextBlock Grid.Row="0" Grid.Column="2" Text="Անվանում" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Category.Name, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch"/>
                    <CheckBox Grid.Row="0" Grid.Column="4" Content="Active" IsChecked="{Binding IsActive}"/>
                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Մեկնաբանություն" HorizontalAlignment="Right"/>
                    <TextBox Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="4" Text="{Binding Category.Description, UpdateSourceTrigger=PropertyChanged}" VerticalContentAlignment="Top" TextWrapping="WrapWithOverflow" HorizontalAlignment="Stretch" Height="80"/>
                </Grid>
            </Grid>
            <Grid Grid.Row="1">
                <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Menu>
                        <MenuItem Header="New" Command="{Binding NewCommand}" CommandParameter="{Binding Category}"/>
                        <MenuItem Header="Edit" Command="{Binding EditCommand}" CommandParameter="{Binding Category}"/>
                        <MenuItem Header="Remove" Command="{Binding RemoveCommand}" CommandParameter="{Binding Category}"/>
                        <MenuItem Header="{Binding ActivateHeader}" Command="{Binding ActivateCommand}" CommandParameter="{Binding Category}"/>
                        <MenuItem Header="Import (Excel)" Command="{Binding ImportExportCommand}" CommandParameter="{x:Static enumerations:ImportExportEnum.FromExcel}"/>
                        <MenuItem Header="Export (Excel)" Command="{Binding ImportExportCommand}" CommandParameter="{x:Static enumerations:ImportExportEnum.ToExcel}"/>
                        <MenuItem Header="Refresh" Command="{Binding RefreshCommand}"/>
                    </Menu>
                </StackPanel>
            </Grid>
            <Grid Grid.Row="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBox Grid.Row="0" 
                         Text="{Binding Filter, UpdateSourceTrigger=PropertyChanged}"  HorizontalAlignment="Stretch" 
                         Height="25" 
                         FontSize="15" 
                         VerticalContentAlignment="Center" 
                         Width="Auto" 
                         Margin="10 5"
                         VerticalAlignment="Top" 
                         BorderThickness="1" 
                         BorderBrush="Black"/>
                <Border Grid.Row="1" Margin="10" BorderThickness="1">
                    <TreeView x:Name="TreeView" ItemsSource="{Binding Items}">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="{x:Type TreeViewItem}">
                                <!--<Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />-->
                                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                <Setter Property="FontWeight" Value="Normal" />
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                        <Setter Property="Background" Value="#FF8801"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                <Border ToolTip="{Binding Description}">
                                    <TextBlock Text="{Binding ShortDescription}" TextTrimming="CharacterEllipsis" />
                                </Border>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedItemChanged">
                                <i:InvokeCommandAction Command="{Binding SelectedItemChangedCommand}" CommandParameter="{Binding ElementName=TreeView, Path=SelectedItem}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Set parent" Command="{Binding SetParentCommand}" CommandParameter="{Binding Category}"/>
                                <MenuItem Header="Remove parent" Command="{Binding RemoveParentCommand}" CommandParameter="{Binding Category}"/>
                                <Separator/>
                                <MenuItem Header="Edit" Command="{Binding EditCommand}" CommandParameter="{Binding Category}"/>
                            </ContextMenu>
                        </TreeView.ContextMenu>
                    </TreeView>
                </Border>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>